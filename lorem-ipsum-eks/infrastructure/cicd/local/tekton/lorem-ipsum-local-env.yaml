apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tf-cli
  namespace: tekton-pipelines
spec:
  workspaces:
    - name: source
    - name: secrets
    - name: kube-config
      mountPath: /secrets-raw/.kube
  params:
    - name: path
      type: string
      description: Path to tf files
      default: "$(workspaces.source.path)/lorem-ipsum-eks/infrastructure/local"
    - name: namespace
      type: string
      description: Kubernetes namespace
      default: "demo2"
  steps:
    - name: prepare
      image: alpine
      script: |
        #!/bin/sh
        ls $(inputs.params.path)
        echo $(workspaces.source.path)
        echo $(workspaces.secrets.path)
        mkdir -p $(workspaces.secrets.path)/.kube
        mkdir -p /terraform
        cat $(workspaces.kube-config.path)/config | base64 -d >> $(workspaces.secrets.path)/.kube/config
        echo $(workspaces.secrets.path)/.kube/config
        cat $(workspaces.secrets.path)/.kube/config
    - name: init
      image: docker.io/hashicorp/terraform:light
      workingDir: $(inputs.params.path)
      command: ["terraform"]
      args:
        - "init"
    - name: apply
      image: docker.io/hashicorp/terraform:light
      workingDir: $(inputs.params.path)
      command: ["terraform"]
      args:
        - apply
        - -auto-approve
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: lorem-ipsum-terraform-local-env
  namespace: tekton-pipelines
spec:
  workspaces:
    - name: source
    - name: secrets
    - name: kube-config
  params:
    - name: image-url
      type: string
      description: Docker registry image url.
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: branch-name
      type: string
      description: The git depth to clone.
    - name: argocd-repo-url
      type: string
      description: The git repository URL to clone from.
    - name: argocd-branch-name
      type: string
      description: The git depth to clone.
    - name: depth
      type: string
      description: The clone depth.
      default: "0"
    - name: namespace
      type: string
      description: The kube namespace.
      default: ""
  tasks:
    - name: clean
      taskRef:
        name: clean
      workspaces:
        - name: source
          workspace: source
    - name: fetch-source-repo
      taskRef:
        name: git-clone
      runAfter:
        - clean
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch-name)
        - name: depth
          value: $(params.depth)

    - name: terraform-local-env
      taskRef:
        name: tf-cli
      runAfter:
        - fetch-source-repo
      params:
        - name: namespace
          value: $(params.namespace)
      workspaces:
        - name: source
          workspace: source
        - name: secrets
          workspace: secrets
        - name: kube-config
          workspace: kube-config

---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: lorem-ipsum-terraform-local-env-run
  namespace: tekton-pipelines
spec:
  serviceAccountName: git-push-service-account
  pipelineRef:
    name: lorem-ipsum-terraform-local-env
  params:
    - name: repo-url
      value: git@github.com:adriandolha/cloud-demo.git
    - name: branch-name
      value: master
    - name: argocd-repo-url
      value: git@github.com:adriandolha/lorem-ipsum-argocd.git
    - name: argocd-branch-name
      value: main
    - name: image-url
      value: "docker-registry.demo:5000/lorem-ipsum"
    - name: namespace
      value: "demo2"
  workspaces:
    - name: source
      persistentVolumeClaim:
        claimName: lorem-ipsum-source-ws
    - name: secrets
      persistentVolumeClaim:
        claimName: lorem-ipsum-source-ws
    - name: kube-config
      secret:
        secretName: kube-config-file
