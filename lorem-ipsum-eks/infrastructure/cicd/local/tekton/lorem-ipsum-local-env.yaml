apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tf-destroy
  namespace: tekton-pipelines
spec:
  workspaces:
    - name: source
    - name: terraform
    - name: secrets
    - name: kube-config
      mountPath: /secrets/.kube
  params:
    - name: path
      type: string
      description: Path to tf files
      default: ""
    - name: namespace
      type: string
      description: Kubernetes namespace
      default: ""
  steps:
    - name: prepare
      image: alpine
      script: |
        #!/bin/sh
        ls $(inputs.params.path)
        echo $(workspaces.source.path)
        echo $(workspaces.terraform.path)
        echo $(workspaces.secrets.path)
        echo $(workspaces.kube-config.path)
        ls $(workspaces.terraform.path)
        ls $(workspaces.kube-config.path)
    - name: init
      image: docker.io/hashicorp/terraform:light
      workingDir: $(inputs.params.path)
      command: [ "terraform" ]
      args:
        - init
        - -reconfigure
        - -backend-config=$(inputs.params.namespace).tfbackend
    - name: destroy
      image: docker.io/hashicorp/terraform:light
      workingDir: $(inputs.params.path)
      command: [ "terraform" ]
      args:
        - destroy
        - -auto-approve
        - -var-file=$(inputs.params.namespace).tfvars
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tf-apply
  namespace: tekton-pipelines
spec:
  workspaces:
    - name: source
    - name: terraform
    - name: secrets
    - name: kube-config
      mountPath: /secrets/.kube
  params:
    - name: path
      type: string
      description: Path to tf files
      default: ""
    - name: namespace
      type: string
      description: Kubernetes namespace
      default: ""
  steps:
    - name: prepare
      image: alpine
      script: |
        #!/bin/sh
        ls $(inputs.params.path)
        echo $(workspaces.source.path)
        echo $(workspaces.terraform.path)
        echo $(workspaces.secrets.path)
        echo $(workspaces.kube-config.path)
        ls $(workspaces.terraform.path)
        ls $(workspaces.kube-config.path)
    - name: init
      image: docker.io/hashicorp/terraform:light
      workingDir: $(inputs.params.path)
      command: [ "terraform" ]
      args:
        - init
        - -reconfigure
        - -backend-config=$(inputs.params.namespace).tfbackend
    - name: apply
      image: docker.io/hashicorp/terraform:light
      workingDir: $(inputs.params.path)
      command: [ "terraform" ]
      args:
        - apply
        - -auto-approve
        - -var-file=$(inputs.params.namespace).tfvars